name: Deploy to Prod

concurrency: "1"

on:
  push:
    branches:
      - main
    paths:
      - "**/*.yml"
      - "**/*.py"
      - "**/*.ipynb"

  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main
    paths:
      - "**/*.yml"
      - "**/*.py"
      - "**/*.ipynb"
      - "**/*.txt"
      - "**/*.json"
      - "**/*.avsc"

jobs:

  build:
    name: "Validate bundle"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: databricks/setup-cli@main

      - run: databricks bundle validate
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}        
          DATABRICKS_BUNDLE_ENV: prod

  deploy:
    name: "Deploy Bundle"
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    needs:
      - build

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - run: |
          python3 -m pip install --upgrade pip
          pip install pyyaml
          python3 schedule/automate_yml_resources.py

      - uses: databricks/setup-cli@main

      - name: Restore deployed files cache
        id: cache-restore
        uses: actions/cache@v3
        with:
          path: previous-artifacts
          key: deployed-ymls-${{ github.ref }}
          restore-keys: |
            deployed-ymls-

      - name: Compare and collect files to deploy
        run: |
          mkdir -p files-to-deploy
          mkdir -p previous-artifacts

          for file in resources/automated_*.yml; do
            filename=$(basename "$file")

            if [ -f "previous-artifacts/$filename" ]; then
              cmp -s "$file" "previous-artifacts/$filename"
              if [ $? -ne 0 ]; then
                echo "Changed: $filename"
                cp "$file" files-to-deploy/
              else
                echo "Unchanged: $filename"
              fi
            else
              echo "New file: $filename"
              cp "$file" files-to-deploy/
            fi
          done 
        
      - name: Deploy Changed Files
        run: |
          shopt -s nullglob
          for file in files-to-deploy/*.yml; do
            echo "Deploying $file..."
            databricks bundle deploy
          done
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}   
          DATABRICKS_BUNDLE_ENV: prod

      - name: Save deployed files for next run
        run: |
          mkdir -p previous-artifacts
          cp resources/automated_*.yml previous-artifacts/
