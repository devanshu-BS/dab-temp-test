# The main job for location_integrity
resources:
  jobs:
    location_integrity_job:
      name: location_integrity_${bundle.target}
      schedule:
        quartz_cron_expression: "0 0 9 * * ?"
        timezone_id: Asia/Kolkata
        pause_status: PAUSED

      email_notifications:
        on_failure:
          - ${var.email}
          - saksham.singh@batterysmart.in
          - devanshu.jain@batterysmart.in

      notification_settings:
        no_alert_for_skipped_runs: true
        no_alert_for_canceled_runs: true
      
      webhook_notifications:
        on_failure:
          - id: bb7409cf-8114-46dc-a73a-8c47dc4bcd9e

      job_clusters:
        - job_cluster_key: location-integrity-cluster
          new_cluster:
            apply_policy_default_values: true
            spark_version: ${var.cluster_spark_version}
            policy_id: ${var.cluster_policy_id_job_compute}
            node_type_id: m5d.large
            driver_node_type_id: m5d.large
            spark_conf:
              "spark.hadoop.fs.s3a.assumed.role.arn": ${var.datalake_readonly_arn}
              "spark.sql.parquet.compression.codec": "zstd"
              "parquet.compression.codec.zstd.level": "9"
            aws_attributes:
              "instance_profile_arn": ${var.instance_profile_arn}
              "zone_id": ${var.zone_id}
            data_security_mode: "SINGLE_USER"
            enable_elastic_disk: true
            autoscale:
              min_workers: 1
              max_workers: 2

      tasks:
        - task_key: location_integrity
          notebook_task:
            notebook_path: notebooks/location_integrity
            source: GIT
          job_cluster_key: location-integrity-cluster
          libraries:
            - pypi:
                package: PyYAML
            - pypi:
                package: pygsheets
            - pypi:
                package: geopy

      tags:
        service:  ${var.tag_value}

      git_source:
        git_url: https://github.com/Battery-Smart/dab-template.git
        git_provider: gitHub
        git_branch: ${var.git_branch} 
        # git_token: ${secrets.GIT_TOKEN}
